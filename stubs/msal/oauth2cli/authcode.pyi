from urllib import urlencode as urlencode

from _typeshed import Incomplete
from BaseHTTPServer import BaseHTTPRequestHandler, HTTPServer

logger: Incomplete

def obtain_auth_code(listen_port, auth_uri: Incomplete | None = None): ...
def is_wsl(): ...

class _AuthCodeHandler(BaseHTTPRequestHandler):
    def do_GET(self) -> None: ...
    def log_message(self, format, *args) -> None: ...

class _AuthCodeHttpServer(HTTPServer):
    allow_reuse_address: bool
    def __init__(self, server_address, *args, **kwargs) -> None: ...
    def handle_timeout(self) -> None: ...

class _AuthCodeHttpServer6(_AuthCodeHttpServer):
    address_family: Incomplete

class AuthCodeReceiver:
    def __init__(
        self,
        port: Incomplete | None = None,
        scheduled_actions: Incomplete | None = None,
    ) -> None: ...
    def get_port(self): ...
    def get_auth_response(self, timeout: Incomplete | None = None, **kwargs): ...
    def close(self) -> None: ...
    def __enter__(self): ...
    def __exit__(
        self,
        exc_type: type[BaseException] | None,
        exc_val: BaseException | None,
        exc_tb: types.TracebackType | None,
    ) -> None: ...
