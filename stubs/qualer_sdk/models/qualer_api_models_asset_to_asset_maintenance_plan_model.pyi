import datetime
from collections.abc import Mapping
from typing import Any, TypeVar

from attrs import define as _attrs_define
from attrs import field as _attrs_field

from ..models.qualer_api_models_asset_to_asset_maintenance_plan_model_asset_status import (
    QualerApiModelsAssetToAssetMaintenancePlanModelAssetStatus as QualerApiModelsAssetToAssetMaintenancePlanModelAssetStatus,
)
from ..models.qualer_api_models_asset_to_asset_maintenance_plan_response import (
    QualerApiModelsAssetToAssetMaintenancePlanResponse as QualerApiModelsAssetToAssetMaintenancePlanResponse,
)
from ..types import UNSET as UNSET
from ..types import Unset as Unset

T = TypeVar("T", bound="QualerApiModelsAssetToAssetMaintenancePlanModel")

@_attrs_define
class QualerApiModelsAssetToAssetMaintenancePlanModel:
    maintenance_plans: (
        Unset | list["QualerApiModelsAssetToAssetMaintenancePlanResponse"]
    ) = ...
    company_id: Unset | int = ...
    asset_id: Unset | int = ...
    serial_number: Unset | str = ...
    asset_user: Unset | str = ...
    asset_tag: Unset | str = ...
    equipment_id: Unset | str = ...
    asset_status: Unset | QualerApiModelsAssetToAssetMaintenancePlanModelAssetStatus = (
        ...
    )
    asset_name: Unset | str = ...
    asset_description: Unset | str = ...
    asset_maker: Unset | str = ...
    location: Unset | str = ...
    room_number: Unset | str = ...
    barcode: Unset | str = ...
    legacy_identifier: Unset | str = ...
    root_category_name: Unset | str = ...
    category_name: Unset | str = ...
    class_: Unset | str = ...
    custodian_email: Unset | str = ...
    custodian_first_name: Unset | str = ...
    custodian_last_name: Unset | str = ...
    custodian_name: Unset | str = ...
    department: Unset | str = ...
    station: Unset | str = ...
    notes: Unset | str = ...
    document_number: Unset | str = ...
    document_section: Unset | str = ...
    cumulative_service_cost: Unset | float = ...
    product_id: Unset | int = ...
    manufacturer_part_number: Unset | str = ...
    product_name: Unset | str = ...
    product_description: Unset | str = ...
    product_manufacturer: Unset | str = ...
    site_name: Unset | str = ...
    site_id: Unset | int = ...
    condition: Unset | str = ...
    criticality: Unset | str = ...
    pool: Unset | str = ...
    purchase_date: Unset | datetime.datetime = ...
    purchase_cost: Unset | float = ...
    life_span_months: Unset | int = ...
    activation_date: Unset | datetime.datetime = ...
    depreciation_basis: Unset | float = ...
    depreciation_method: Unset | int = ...
    retirement_date: Unset | datetime.datetime = ...
    salvage_value: Unset | float = ...
    retirment_reason: Unset | str = ...
    composite_parent_id: Unset | int = ...
    composite_child_count: Unset | int = ...
    additional_properties: dict[str, Any] = _attrs_field(init=False, factory=dict)
    def to_dict(self) -> dict[str, Any]: ...
    @classmethod
    def from_dict(cls, src_dict: Mapping[str, Any]) -> T: ...
    @property
    def additional_keys(self) -> list[str]: ...
    def __getitem__(self, key: str) -> Any: ...
    def __setitem__(self, key: str, value: Any) -> None: ...
    def __delitem__(self, key: str) -> None: ...
    def __contains__(self, key: str) -> bool: ...
