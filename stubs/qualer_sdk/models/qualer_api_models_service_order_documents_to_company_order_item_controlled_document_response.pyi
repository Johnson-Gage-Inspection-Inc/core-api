from collections.abc import Mapping
from typing import Any, TypeVar
from uuid import UUID

from attrs import define as _attrs_define
from attrs import field as _attrs_field

from ..models.qualer_api_models_service_order_documents_to_company_order_item_controlled_document_response_document_type import (
    QualerApiModelsServiceOrderDocumentsToCompanyOrderItemControlledDocumentResponseDocumentType as QualerApiModelsServiceOrderDocumentsToCompanyOrderItemControlledDocumentResponseDocumentType,
)
from ..models.qualer_api_models_service_order_documents_to_company_order_item_controlled_document_response_report_type import (
    QualerApiModelsServiceOrderDocumentsToCompanyOrderItemControlledDocumentResponseReportType as QualerApiModelsServiceOrderDocumentsToCompanyOrderItemControlledDocumentResponseReportType,
)
from ..types import UNSET as UNSET
from ..types import Unset as Unset

T = TypeVar(
    "T",
    bound="QualerApiModelsServiceOrderDocumentsToCompanyOrderItemControlledDocumentResponse",
)

@_attrs_define
class QualerApiModelsServiceOrderDocumentsToCompanyOrderItemControlledDocumentResponse:
    service_order_id: Unset | int = ...
    service_order_item_id: Unset | int = ...
    guid: Unset | UUID = ...
    document_name: Unset | str = ...
    file_name: Unset | str = ...
    document_type: (
        Unset
        | QualerApiModelsServiceOrderDocumentsToCompanyOrderItemControlledDocumentResponseDocumentType
    ) = ...
    revision_number: Unset | int = ...
    report_type: (
        Unset
        | QualerApiModelsServiceOrderDocumentsToCompanyOrderItemControlledDocumentResponseReportType
    ) = ...
    download_url: Unset | str = ...
    additional_properties: dict[str, Any] = _attrs_field(init=False, factory=dict)
    def to_dict(self) -> dict[str, Any]: ...
    @classmethod
    def from_dict(cls, src_dict: Mapping[str, Any]) -> T: ...
    @property
    def additional_keys(self) -> list[str]: ...
    def __getitem__(self, key: str) -> Any: ...
    def __setitem__(self, key: str, value: Any) -> None: ...
    def __delitem__(self, key: str) -> None: ...
    def __contains__(self, key: str) -> bool: ...
