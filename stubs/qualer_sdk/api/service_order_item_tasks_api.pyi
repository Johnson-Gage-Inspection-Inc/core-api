from _typeshed import Incomplete
from pydantic import StrictInt as StrictInt, validate_arguments
from qualer_sdk.api_client import ApiClient as ApiClient
from qualer_sdk.api_response import ApiResponse as ApiResponse
from qualer_sdk.exceptions import ApiTypeError as ApiTypeError, ApiValueError as ApiValueError
from qualer_sdk.models.qualer_api_models_service_order_item_tasks_from_service_order_item_task_create_model import QualerApiModelsServiceOrderItemTasksFromServiceOrderItemTaskCreateModel as QualerApiModelsServiceOrderItemTasksFromServiceOrderItemTaskCreateModel

class ServiceOrderItemTasksApi:
    api_client: Incomplete
    def __init__(self, api_client: Incomplete | None = None) -> None: ...
    @validate_arguments
    def create_work_item_task(self, work_item_id: StrictInt, model: QualerApiModelsServiceOrderItemTasksFromServiceOrderItemTaskCreateModel, **kwargs) -> object: ...
    @validate_arguments
    def create_work_item_task_with_http_info(self, work_item_id: StrictInt, model: QualerApiModelsServiceOrderItemTasksFromServiceOrderItemTaskCreateModel, **kwargs) -> ApiResponse: ...
    @validate_arguments
    def delete_work_item_task(self, work_item_id: StrictInt, task_id: StrictInt, **kwargs) -> object: ...
    @validate_arguments
    def delete_work_item_task_with_http_info(self, work_item_id: StrictInt, task_id: StrictInt, **kwargs) -> ApiResponse: ...
    @validate_arguments
    def get_work_item_task(self, work_item_id: StrictInt, task_id: StrictInt, **kwargs) -> object: ...
    @validate_arguments
    def get_work_item_task_with_http_info(self, work_item_id: StrictInt, task_id: StrictInt, **kwargs) -> ApiResponse: ...
    @validate_arguments
    def get_work_item_tasks(self, work_item_id: StrictInt, **kwargs) -> object: ...
    @validate_arguments
    def get_work_item_tasks_with_http_info(self, work_item_id: StrictInt, **kwargs) -> ApiResponse: ...
