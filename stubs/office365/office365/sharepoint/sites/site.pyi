import datetime

from _typeshed import Incomplete
from office365.runtime.client_result import ClientResult as ClientResult
from office365.runtime.client_value_collection import (
    ClientValueCollection as ClientValueCollection,
)
from office365.runtime.paths.resource_path import ResourcePath as ResourcePath
from office365.runtime.paths.service_operation import (
    ServiceOperationPath as ServiceOperationPath,
)
from office365.runtime.queries.service_operation import (
    ServiceOperationQuery as ServiceOperationQuery,
)
from office365.sharepoint.audit.audit import Audit as Audit
from office365.sharepoint.changes.collection import ChangeCollection as ChangeCollection
from office365.sharepoint.changes.query import ChangeQuery as ChangeQuery
from office365.sharepoint.changes.token import ChangeToken as ChangeToken
from office365.sharepoint.compliance.store_proxy import (
    SPPolicyStoreProxy as SPPolicyStoreProxy,
)
from office365.sharepoint.compliance.tag import ComplianceTag as ComplianceTag
from office365.sharepoint.entity import Entity as Entity
from office365.sharepoint.entity_collection import EntityCollection as EntityCollection
from office365.sharepoint.eventreceivers.definition_collection import (
    EventReceiverDefinitionCollection as EventReceiverDefinitionCollection,
)
from office365.sharepoint.features.collection import (
    FeatureCollection as FeatureCollection,
)
from office365.sharepoint.lists.list import List as List
from office365.sharepoint.migration.job_status import (
    SPMigrationJobStatus as SPMigrationJobStatus,
)
from office365.sharepoint.portal.sites.icon_manager import (
    SiteIconManager as SiteIconManager,
)
from office365.sharepoint.principal.users.user import User as User
from office365.sharepoint.recyclebin.item_collection import (
    RecycleBinItemCollection as RecycleBinItemCollection,
)
from office365.sharepoint.sitehealth.summary import (
    SiteHealthSummary as SiteHealthSummary,
)
from office365.sharepoint.sites.azure_container_Info import (
    ProvisionedTemporaryAzureContainerInfo as ProvisionedTemporaryAzureContainerInfo,
)
from office365.sharepoint.sites.copy_job_progress import (
    CopyJobProgress as CopyJobProgress,
)
from office365.sharepoint.sites.home.site import SPHSite as SPHSite
from office365.sharepoint.sites.html_field_security_setting import (
    HTMLFieldSecuritySetting as HTMLFieldSecuritySetting,
)
from office365.sharepoint.sites.upgrade_info import UpgradeInfo as UpgradeInfo
from office365.sharepoint.sites.usage_info import UsageInfo as UsageInfo
from office365.sharepoint.sites.version_policy_manager import (
    SiteVersionPolicyManager as SiteVersionPolicyManager,
)
from office365.sharepoint.tenant.administration.sites.administrators_info import (
    SiteAdministratorsInfo as SiteAdministratorsInfo,
)
from office365.sharepoint.types.resource_path import ResourcePath as SPResPath
from office365.sharepoint.usercustomactions.collection import (
    UserCustomActionCollection as UserCustomActionCollection,
)
from office365.sharepoint.webs.template_collection import (
    WebTemplateCollection as WebTemplateCollection,
)
from office365.sharepoint.webs.web import Web as Web

class Site(Entity):
    def __init__(self, context, resource_path: Incomplete | None = None) -> None: ...
    def create_migration_ingestion_job(
        self,
        g_web_id,
        azure_container_source_uri,
        azure_container_manifest_uri,
        azure_queue_report_uri,
        ingestion_task_key,
    ): ...
    def create_migration_job(
        self,
        g_web_id: Incomplete | None = None,
        azure_container_source_uri: Incomplete | None = None,
        azure_container_manifest_uri: Incomplete | None = None,
        azure_queue_report_uri: Incomplete | None = None,
    ): ...
    def create_preview_site(
        self, upgrade: Incomplete | None = None, sendemail: Incomplete | None = None
    ): ...
    def certify_site(self): ...
    def delete_object(self): ...
    def check_is_deletable(self): ...
    def extend_upgrade_reminder_date(self): ...
    @staticmethod
    def from_url(url): ...
    def get_available_tags(self): ...
    def get_block_download_policy_for_files_data(self): ...
    def get_migration_status(self): ...
    def get_copy_job_progress(self, copy_job_info: Incomplete | None = None): ...
    def get_site_logo(self): ...
    def get_site_logo_ex(self): ...
    def set_site_logo(self, relative_logo_url): ...
    def is_comm_site(self): ...
    def is_valid_home_site(self): ...
    result: Incomplete
    def set_as_home_site(self): ...
    def get_changes(self, query: Incomplete | None = None): ...
    def get_recycle_bin_items(
        self, row_limit: int = 100, is_ascending: bool = True
    ): ...
    def get_site_administrators(self): ...
    def get_web_path(self, site_id, web_id): ...
    def get_web_templates(self, lcid: int = 1033, override_compat_level: int = 0): ...
    def invalidate(self): ...
    def needs_upgrade_by_type(self, version_upgrade, recursive): ...
    def join_hub_site(
        self,
        hub_site_id,
        approval_token: Incomplete | None = None,
        approval_correlation_id: Incomplete | None = None,
    ): ...
    @staticmethod
    def get_url_by_id(context, site_id, stop_redirect: bool = False): ...
    @staticmethod
    def get_url_by_id_for_web(context, site_id, stop_redirect, web_id): ...
    @staticmethod
    def exists(context, url): ...
    def is_deletable(self): ...
    def get_catalog(self, type_catalog): ...
    def open_web(self, str_url): ...
    def open_web_by_id(self, web_id): ...
    def provision_temporary_azure_container(self): ...
    def register_hub_site(self, create_info: Incomplete | None = None): ...
    def run_health_check(
        self,
        rule_id: Incomplete | None = None,
        repair: Incomplete | None = None,
        run_always: Incomplete | None = None,
    ): ...
    def unregister_hub_site(self): ...
    def update_client_object_model_use_remote_apis_permission_setting(
        self, require_use_remote_apis
    ): ...
    @property
    def allow_create_declarative_workflow(self) -> bool | None: ...
    @property
    def allow_designer(self) -> bool | None: ...
    @property
    def allowed_external_domains(self) -> bool | None: ...
    @property
    def allow_master_page_editing(self) -> bool | None: ...
    @property
    def allow_revert_from_template(self) -> bool | None: ...
    @property
    def audit(self): ...
    @property
    def can_upgrade(self) -> bool | None: ...
    @property
    def channel_group_id(self) -> str | None: ...
    @property
    def classification(self) -> str | None: ...
    @property
    def compatibility_level(self) -> str | None: ...
    @property
    def comments_on_site_pages_disabled(self) -> bool | None: ...
    @property
    def current_change_token(self): ...
    @property
    def disable_flows(self) -> bool | None: ...
    @property
    def external_sharing_tips_enabled(self) -> bool | None: ...
    @property
    def external_user_expiration_in_days(self) -> int | None: ...
    @property
    def geo_location(self) -> str | None: ...
    @property
    def group_id(self) -> str | None: ...
    @property
    def lock_issue(self) -> str | None: ...
    @property
    def root_web(self) -> Web: ...
    @property
    def owner(self) -> User: ...
    @property
    def read_only(self) -> bool | None: ...
    @property
    def required_designer_version(self) -> str | None: ...
    @property
    def url(self) -> str | None: ...
    @property
    def server_relative_url(self) -> str | None: ...
    @property
    def share_by_email_enabled(self) -> bool | None: ...
    @property
    def status_bar_text(self) -> str | None: ...
    @property
    def trim_audit_log(self) -> bool | None: ...
    @property
    def write_locked(self) -> bool | None: ...
    @property
    def id(self) -> str | None: ...
    @property
    def hub_site_id(self) -> str | None: ...
    @property
    def is_hub_site(self) -> bool | None: ...
    @property
    def server_relative_path(self) -> SPResPath | None: ...
    @property
    def status_bar_link(self) -> str | None: ...
    @property
    def secondary_contact(self): ...
    @property
    def recycle_bin(self): ...
    @property
    def features(self) -> FeatureCollection: ...
    @property
    def max_items_per_throttled_operation(self) -> int | None: ...
    @property
    def needs_b2b_upgrade(self) -> bool | None: ...
    @property
    def event_receivers(self): ...
    @property
    def show_url_structure(self) -> bool | None: ...
    @property
    def ui_version_configuration_enabled(self) -> bool | None: ...
    @property
    def usage_info(self): ...
    @property
    def upgrade_info(self): ...
    @property
    def upgrade_reminder_date(self): ...
    @property
    def upgrade_scheduled(self) -> bool | None: ...
    @property
    def upgrade_scheduled_date(self) -> datetime.datetime | None: ...
    @property
    def upgrading(self) -> bool | None: ...
    @property
    def user_custom_actions(self): ...
    @property
    def version_policy_for_new_libraries_template(self): ...
    def get_property(self, name, default_value: Incomplete | None = None): ...
    def set_property(self, name, value, persist_changes: bool = True): ...
