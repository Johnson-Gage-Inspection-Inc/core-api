from _typeshed import Incomplete
from office365.runtime.client_result import ClientResult as ClientResult
from office365.runtime.paths.resource_path import ResourcePath as ResourcePath
from office365.runtime.queries.service_operation import (
    ServiceOperationQuery as ServiceOperationQuery,
)
from office365.sharepoint.contenttypes.content_type_id import (
    ContentTypeId as ContentTypeId,
)
from office365.sharepoint.entity import Entity as Entity
from office365.sharepoint.listitems.caml.query import CamlQuery as CamlQuery
from office365.sharepoint.listitems.collection import (
    ListItemCollection as ListItemCollection,
)
from office365.sharepoint.types.resource_path import ResourcePath as SPResPath
from office365.sharepoint.views.collection import ViewCollection as ViewCollection
from office365.sharepoint.views.field_collection import (
    ViewFieldCollection as ViewFieldCollection,
)
from office365.sharepoint.views.visualization.visualization import (
    Visualization as Visualization,
)

class View(Entity):
    def __init__(
        self,
        context,
        resource_path: Incomplete | None = None,
        parent_list: Incomplete | None = None,
    ) -> None: ...
    def get_items(self): ...
    def render_as_html(self): ...
    def set_view_xml(self, view_xml): ...
    @property
    def aggregations(self) -> str | None: ...
    @property
    def aggregations_status(self) -> str | None: ...
    @property
    def associated_content_type_id(self) -> str | None: ...
    @property
    def calendar_view_styles(self) -> str | None: ...
    @property
    def column_width(self) -> int | None: ...
    @property
    def parent_list(self): ...
    @property
    def parent_collection(self) -> ViewCollection: ...
    @property
    def js_link(self) -> str | None: ...
    @property
    def content_type_id(self) -> ContentTypeId | None: ...
    @content_type_id.setter
    def content_type_id(self, value) -> None: ...
    @property
    def custom_formatter(self) -> str | None: ...
    @property
    def custom_order(self) -> str | None: ...
    @property
    def editor_modified(self) -> bool | None: ...
    def formats(self) -> str | None: ...
    @property
    def hidden(self) -> bool | None: ...
    @hidden.setter
    def hidden(self, value: bool) -> None: ...
    @property
    def default_view(self) -> bool | None: ...
    @default_view.setter
    def default_view(self, value: bool) -> None: ...
    @property
    def default_view_for_content_type(self) -> bool | None: ...
    @property
    def view_fields(self) -> ViewFieldCollection: ...
    @property
    def view_query(self) -> str | None: ...
    @property
    def base_view_id(self) -> str | None: ...
    def read_only_view(self) -> bool | None: ...
    @property
    def server_relative_path(self) -> SPResPath | None: ...
    @property
    def view_joins(self) -> str | None: ...
    @property
    def visualization_info(self): ...
    def get_property(self, name, default_value: Incomplete | None = None): ...
    def set_property(self, name, value, persist_changes: bool = True): ...
