from _typeshed import Incomplete
from office365.runtime.client_result import ClientResult as ClientResult
from office365.runtime.client_value_collection import (
    ClientValueCollection as ClientValueCollection,
)
from office365.runtime.paths.resource_path import ResourcePath as ResourcePath
from office365.runtime.queries.service_operation import (
    ServiceOperationQuery as ServiceOperationQuery,
)
from office365.sharepoint.entity import Entity as Entity
from office365.sharepoint.entity_collection import EntityCollection as EntityCollection
from office365.sharepoint.gtp.request_options import (
    ChatGptRequestOptions as ChatGptRequestOptions,
)
from office365.sharepoint.listitems.collection import (
    ListItemCollection as ListItemCollection,
)
from office365.sharepoint.listitems.listitem import ListItem as ListItem
from office365.sharepoint.lists.render_data_parameters import (
    RenderListDataParameters as RenderListDataParameters,
)
from office365.sharepoint.lists.render_override_parameters import (
    RenderListDataOverrideParameters as RenderListDataOverrideParameters,
)
from office365.sharepoint.publishing.portal_health_status import (
    PortalHealthStatus as PortalHealthStatus,
)
from office365.sharepoint.sites.home.details import HomeSitesDetails as HomeSitesDetails
from office365.sharepoint.sites.site import Site as Site
from office365.sharepoint.tenant.administration.collaboration.insights_data import (
    CollaborationInsightsData as CollaborationInsightsData,
)
from office365.sharepoint.tenant.administration.collaboration.insights_overview import (
    CollaborationInsightsOverview as CollaborationInsightsOverview,
)
from office365.sharepoint.tenant.administration.hubsites.properties import (
    HubSiteProperties as HubSiteProperties,
)
from office365.sharepoint.tenant.administration.insights.onedrive_site_sharing import (
    OneDriveSiteSharingInsights as OneDriveSiteSharingInsights,
)
from office365.sharepoint.tenant.administration.insights.top_files_sharing import (
    TopFilesSharingInsights as TopFilesSharingInsights,
)
from office365.sharepoint.tenant.administration.policies.app_billing_properties import (
    SPOAppBillingProperties as SPOAppBillingProperties,
)
from office365.sharepoint.tenant.administration.policies.content_security_configuration import (
    SPOContentSecurityPolicyConfiguration as SPOContentSecurityPolicyConfiguration,
)
from office365.sharepoint.tenant.administration.policies.definition import (
    TenantAdminPolicyDefinition as TenantAdminPolicyDefinition,
)
from office365.sharepoint.tenant.administration.policies.file_version_types import (
    SPOFileVersionBatchDeleteJobProgress as SPOFileVersionBatchDeleteJobProgress,
    SPOFileVersionPolicySettings as SPOFileVersionPolicySettings,
)
from office365.sharepoint.tenant.administration.powerapps.environment import (
    PowerAppsEnvironment as PowerAppsEnvironment,
)
from office365.sharepoint.tenant.administration.recent_admin_action_report import (
    RecentAdminActionReport as RecentAdminActionReport,
)
from office365.sharepoint.tenant.administration.recent_admin_action_report_payload import (
    RecentAdminActionReportPayload as RecentAdminActionReportPayload,
)
from office365.sharepoint.tenant.administration.secondary_administrators_fields_data import (
    SecondaryAdministratorsFieldsData as SecondaryAdministratorsFieldsData,
)
from office365.sharepoint.tenant.administration.secondary_administrators_info import (
    SecondaryAdministratorsInfo as SecondaryAdministratorsInfo,
)
from office365.sharepoint.tenant.administration.siteinfo_for_site_picker import (
    SiteInfoForSitePicker as SiteInfoForSitePicker,
)
from office365.sharepoint.tenant.administration.sites.administrators_info import (
    SiteAdministratorsInfo as SiteAdministratorsInfo,
)
from office365.sharepoint.tenant.administration.sites.creation_properties import (
    SiteCreationProperties as SiteCreationProperties,
)
from office365.sharepoint.tenant.administration.sites.properties import (
    SiteProperties as SiteProperties,
)
from office365.sharepoint.tenant.administration.sites.properties_collection import (
    SitePropertiesCollection as SitePropertiesCollection,
)
from office365.sharepoint.tenant.administration.sites.properties_enumerable_filter import (
    SitePropertiesEnumerableFilter as SitePropertiesEnumerableFilter,
)
from office365.sharepoint.tenant.administration.spo_operation import (
    SpoOperation as SpoOperation,
)
from office365.sharepoint.tenant.administration.syntex.billing_context import (
    SyntexBillingContext as SyntexBillingContext,
)
from office365.sharepoint.tenant.administration.types import (
    CreatePolicyRequest as CreatePolicyRequest,
)
from office365.sharepoint.tenant.administration.webs.templates.collection import (
    SPOTenantWebTemplateCollection as SPOTenantWebTemplateCollection,
)
from office365.sharepoint.tenant.settings import TenantSettings as TenantSettings
from typing import AnyStr
from typing_extensions import Self

class Tenant(Entity):
    def __init__(self, context) -> None: ...
    def accept_syntex_repository_terms_of_service(self): ...
    def activate_application_billing_policy(self, billing_policy_id): ...
    def add_recent_admin_action_report(self): ...
    def get_corporate_catalog_site(self): ...
    def get_chat_gpt_response(self): ...
    def delete_policy_definition(self, item_id): ...
    def delete_recent_admin_action_report(self, report_id): ...
    def get_spo_tenant_all_web_templates(self): ...
    def get_onedrive_site_sharing_insights(self, query_mode): ...
    def get_collaboration_insights_data(self): ...
    def get_collaboration_insights_overview(self): ...
    def render_recent_admin_actions(self): ...
    def get_content_security_policy(self): ...
    def get_spo_app_billing_policies(self): ...
    def get_top_files_sharing_insights(self, query_mode: Incomplete | None = None): ...
    def get_site_thumbnail_logo(self, site_url: str) -> ClientResult[AnyStr]: ...
    def get_home_site_url(self) -> ClientResult[str]: ...
    def get_home_sites(
        self,
    ) -> ClientResult[ClientValueCollection[HomeSitesDetails]]: ...
    def get_home_sites_details(self): ...
    def remove_home_site(self, home_site_url): ...
    def has_valid_education_license(self): ...
    def is_request_content_management_assessment_eligible(self): ...
    def is_syntex_repository_terms_of_service_accepted(self): ...
    def export_to_csv(
        self,
        view_xml: Incomplete | None = None,
        time_zone_id: Incomplete | None = None,
        columns_info: Incomplete | None = None,
        list_name: Incomplete | None = None,
    ): ...
    def render_policy_report(self): ...
    @staticmethod
    def from_url(admin_site_url): ...
    def get_lock_state_by_id(self, site_id): ...
    def hub_sites(self, site_url) -> None: ...
    def get_power_apps_environments(self): ...
    def get_ransomware_activities(self) -> ClientResult[AnyStr]: ...
    def get_ransomware_events_overview(self) -> ClientResult[AnyStr]: ...
    def get_root_site_url(self): ...
    def get_site_authorization_code_for_migration(self, endpoint_url): ...
    def get_site_subscription_id(self): ...
    def get_sp_list_item_count(self, list_name: str) -> ClientResult[int]: ...
    def get_sp_list_root_folder_properties(
        self, list_name: str
    ) -> ClientResult[dict]: ...
    def get_spo_all_web_templates(
        self, culture_name: str = None, compatibility_level: int = None
    ) -> SPOTenantWebTemplateCollection: ...
    def check_tenant_intune_license(self) -> ClientResult[bool]: ...
    def check_tenant_licenses(self, licenses): ...
    def get_site(self, site_url: str) -> ListItem: ...
    def get_sites_by_state(self, states: Incomplete | None = None): ...
    def get_site_health_status(self, source_url): ...
    def get_site_administrators(
        self, site_id, return_type: Incomplete | None = None
    ): ...
    def get_site_secondary_administrators(
        self, site_id: str
    ) -> ClientResult[ClientValueCollection[SecondaryAdministratorsInfo]]: ...
    def set_site_secondary_administrators(
        self, site_id, emails: Incomplete | None = None, names: Incomplete | None = None
    ): ...
    def register_hub_site(self, site_url: str) -> HubSiteProperties: ...
    def unregister_hub_site(self, site_url: str) -> Self: ...
    def create_policy_definition(self): ...
    def create_site(self, url, owner, title: Incomplete | None = None): ...
    def create_site_sync(self, url, owner, title: Incomplete | None = None): ...
    def remove_site(self, site_url): ...
    def remove_deleted_site(self, site_url): ...
    def reorder_home_sites(self, home_sites_site_ids): ...
    def restore_deleted_site(self, site_url): ...
    def restore_deleted_site_by_id(self, site_id): ...
    def get_file_version_policy_for_library(
        self, site_url, list_params: Incomplete | None = None
    ): ...
    def get_file_version_batch_delete_job_progress_for_library(
        self, site_url, list_params
    ): ...
    def get_site_properties_by_site_id(
        self, site_id: str, include_detail: bool = False
    ) -> SiteProperties: ...
    def get_site_properties_by_url(
        self, url: str, include_detail: bool = False
    ) -> SiteProperties: ...
    def get_site_properties_from_sharepoint_by_filters(
        self, _filter: str = None, start_index: str = None, include_detail: bool = False
    ) -> SitePropertiesCollection: ...
    def get_billing_policy_id_for_app(self, application_id): ...
    def connect_site_to_hub_site_by_id(
        self, site_url: str, hub_site_id: str
    ) -> Self: ...
    def ensure_brand_center_feature(self): ...
    def export_unlicensed_one_drive_for_business_list_to_csv(self): ...
    def send_email(
        self, site_url: str, activity_event_json: str
    ) -> ClientResult[bool]: ...
    def set_copilot_promo_optin_status(
        self, copilot_promo_optin_enabled: bool
    ) -> ClientResult[bool]: ...
    def set_default_view(self, view_id: str, list_name: str) -> Self: ...
    def get_file_version_policy(self): ...
    def set_file_version_policy(
        self, is_auto_trim_enabled, major_version_limit, expire_versions_after_days
    ): ...
    def clear_file_version_policy(self): ...
    @property
    def app_service_principal(self): ...
    @property
    def admin_settings(self): ...
    @property
    def migration_center(self): ...
    @property
    def comms_messages(self): ...
    @property
    def multi_geo(self): ...
    @property
    def ai_builder_enabled(self) -> str | None: ...
    @property
    def ai_builder_site_info_list(self): ...
    @property
    def allow_comments_text_on_email_enabled(self) -> bool | None: ...
    @property
    def allow_everyone_except_external_users_claim_in_private_site(
        self,
    ) -> bool | None: ...
    @property
    def allow_editing(self) -> bool | None: ...
    @property
    def default_content_center_site(self): ...
    @property
    def file_version_policy_xml(self) -> str | None: ...
    @property
    def information_barriers_suspension(self) -> bool | None: ...
    @property
    def ip_address_allow_list(self) -> str | None: ...
    @property
    def ip_address_enforcement(self) -> bool | None: ...
    @ip_address_enforcement.setter
    def ip_address_enforcement(self, value: bool) -> None: ...
    @property
    def no_access_redirect_url(self) -> bool | None: ...
    @property
    def notifications_in_share_point_enabled(self) -> bool | None: ...
    @property
    def notify_owners_when_invitations_accepted(self) -> bool | None: ...
    @property
    def one_drive_storage_quota(self) -> int | None: ...
    @property
    def notify_owners_when_items_reshared(self) -> bool | None: ...
    @property
    def root_site_url(self) -> str | None: ...
    @property
    def sites(self): ...
    @property
    def cdn_api(self): ...
    @property
    def crawl_versions_info_provider(self): ...
    @property
    def syntex_billing_subscription_settings(self): ...
    @property
    def admin_endpoints(self): ...
    @property
    def entity_type_name(self): ...
