from _typeshed import Incomplete
from office365.runtime.client_result import ClientResult as ClientResult
from office365.runtime.client_value_collection import (
    ClientValueCollection as ClientValueCollection,
)
from office365.runtime.paths.resource_path import ResourcePath as ResourcePath
from office365.runtime.paths.service_operation import (
    ServiceOperationPath as ServiceOperationPath,
)
from office365.runtime.queries.service_operation import (
    ServiceOperationQuery as ServiceOperationQuery,
)
from office365.sharepoint.changes.collection import ChangeCollection as ChangeCollection
from office365.sharepoint.changes.log_item_query import (
    ChangeLogItemQuery as ChangeLogItemQuery,
)
from office365.sharepoint.changes.query import ChangeQuery as ChangeQuery
from office365.sharepoint.changes.token import ChangeToken as ChangeToken
from office365.sharepoint.compliance.tag import ComplianceTag as ComplianceTag
from office365.sharepoint.contenttypes.collection import (
    ContentTypeCollection as ContentTypeCollection,
)
from office365.sharepoint.customactions.element_collection import (
    CustomActionElementCollection as CustomActionElementCollection,
)
from office365.sharepoint.eventreceivers.definition_collection import (
    EventReceiverDefinitionCollection as EventReceiverDefinitionCollection,
)
from office365.sharepoint.fields.collection import FieldCollection as FieldCollection
from office365.sharepoint.fields.field import Field as Field
from office365.sharepoint.fields.related_field_collection import (
    RelatedFieldCollection as RelatedFieldCollection,
)
from office365.sharepoint.files.checked_out_file_collection import (
    CheckedOutFileCollection as CheckedOutFileCollection,
)
from office365.sharepoint.files.file import File as File
from office365.sharepoint.flows.synchronization_result import (
    FlowSynchronizationResult as FlowSynchronizationResult,
)
from office365.sharepoint.folders.folder import Folder as Folder
from office365.sharepoint.forms.collection import FormCollection as FormCollection
from office365.sharepoint.listitems.caml.query import CamlQuery as CamlQuery
from office365.sharepoint.listitems.collection import (
    ListItemCollection as ListItemCollection,
)
from office365.sharepoint.listitems.creation_information import (
    ListItemCreationInformation as ListItemCreationInformation,
)
from office365.sharepoint.listitems.creation_information_using_path import (
    ListItemCreationInformationUsingPath as ListItemCreationInformationUsingPath,
)
from office365.sharepoint.listitems.form_update_value import (
    ListItemFormUpdateValue as ListItemFormUpdateValue,
)
from office365.sharepoint.listitems.listitem import ListItem as ListItem
from office365.sharepoint.lists.bloom_filter import ListBloomFilter as ListBloomFilter
from office365.sharepoint.lists.collection import ListCollection as ListCollection
from office365.sharepoint.lists.creatables_info import CreatablesInfo as CreatablesInfo
from office365.sharepoint.lists.data_source import ListDataSource as ListDataSource
from office365.sharepoint.lists.render_data_parameters import (
    RenderListDataParameters as RenderListDataParameters,
)
from office365.sharepoint.lists.rule import SPListRule as SPListRule
from office365.sharepoint.lists.version_policy_manager import (
    VersionPolicyManager as VersionPolicyManager,
)
from office365.sharepoint.navigation.configured_metadata_items import (
    ConfiguredMetadataNavigationItemCollection as ConfiguredMetadataNavigationItemCollection,
)
from office365.sharepoint.pages.wiki_page_creation_information import (
    WikiPageCreationInformation as WikiPageCreationInformation,
)
from office365.sharepoint.permissions.securable_object import (
    SecurableObject as SecurableObject,
)
from office365.sharepoint.principal.users.user import User as User
from office365.sharepoint.sharing.object_sharing_settings import (
    ObjectSharingSettings as ObjectSharingSettings,
)
from office365.sharepoint.sitescripts.utility import (
    SiteScriptUtility as SiteScriptUtility,
)
from office365.sharepoint.translation.user_resource import UserResource as UserResource
from office365.sharepoint.usercustomactions.collection import (
    UserCustomActionCollection as UserCustomActionCollection,
)
from office365.sharepoint.utilities.utility import Utility as Utility
from office365.sharepoint.views.collection import ViewCollection as ViewCollection
from office365.sharepoint.views.view import View as View
from office365.sharepoint.webhooks.subscription_collection import (
    SubscriptionCollection as SubscriptionCollection,
)
from typing import AnyStr, Callable, IO
from typing_extensions import Self

class List(SecurableObject):
    def __init__(self, context, resource_path: Incomplete | None = None) -> None: ...
    def export(
        self,
        local_file: IO,
        include_content: bool = False,
        item_exported: Callable[[ListItem | File | Folder], None] = None,
    ) -> Self: ...
    def can_customize_forms(self): ...
    def clear(self): ...
    def create_document_and_get_edit_link(
        self,
        file_name: Incomplete | None = None,
        folder_path: Incomplete | None = None,
        document_template_type: int = 1,
        template_url: Incomplete | None = None,
    ): ...
    def delete_rule(self, rule_id): ...
    def get_async_action_config(self): ...
    def get_bloom_filter(self, start_item_id: Incomplete | None = None): ...
    def get_compliance_tag(self): ...
    def get_metadata_navigation_settings(self): ...
    def get_flow_permission_level(self): ...
    def get_sharing_settings(self): ...
    def get_site_script(self, options: dict = None) -> ClientResult[str]: ...
    def ensure_signoff_status_field(self): ...
    def get_all_rules(self): ...
    def get_business_app_operation_status(self): ...
    def search_lookup_field_choices(
        self, target_field_name, begins_with_search_string, paging_info
    ): ...
    def sync_flow_callback_url(self, flow_id): ...
    def sync_flow_instance(self, flow_id): ...
    def sync_flow_instances(self, retrieve_group_flows): ...
    def sync_flow_templates(self, category): ...
    def create_document_with_default_name(self, folder_path, extension): ...
    def recycle(self): ...
    def start_recycle(self): ...
    def render_list_data(self, view_xml): ...
    @staticmethod
    def get_list_data_as_stream(
        context,
        list_full_url,
        parameters: Incomplete | None = None,
        casc_del_warn_message: Incomplete | None = None,
        custom_action: Incomplete | None = None,
        drill_down: Incomplete | None = None,
        field: Incomplete | None = None,
        field_internal_name: Incomplete | None = None,
        return_type: Incomplete | None = None,
    ): ...
    @staticmethod
    def get_onedrive_list_data_as_stream(
        context,
        parameters: Incomplete | None = None,
        return_type: Incomplete | None = None,
    ): ...
    def bulk_validate_update_list_items(
        self,
        item_ids,
        form_values,
        new_document_update: bool = True,
        checkin_comment: Incomplete | None = None,
        folder_path: Incomplete | None = None,
    ): ...
    def get_lookup_field_choices(
        self, target_field_name, paging_info: Incomplete | None = None
    ): ...
    def get_list_item_changes_since_token(
        self, query: ChangeLogItemQuery
    ) -> ClientResult[AnyStr]: ...
    def save_as_new_view(self, old_name, new_name, private_view, uri): ...
    def save_as_template(self, file_name, name, description, save_data): ...
    def get_item_by_unique_id(self, unique_id): ...
    def get_web_dav_url(self, source_url: str) -> ClientResult[str]: ...
    def get_items(self, caml_query: CamlQuery = None) -> ListItemCollection: ...
    def add_item(
        self, creation_information: ListItemCreationInformation | dict
    ) -> ListItem: ...
    def create_wiki_page(self, page_name, page_content): ...
    def add_item_using_path(self, leaf_name, object_type, folder_url): ...
    def add_validate_update_item(
        self, create_info, form_values: Incomplete | None = None
    ): ...
    def get_item_by_id(self, item_id: int) -> ListItem: ...
    def get_item_by_url(self, url: str) -> ListItem: ...
    def get_view(self, view_id): ...
    def get_changes(self, query: ChangeQuery = None) -> ChangeCollection: ...
    def get_checked_out_files(self): ...
    def render_list_data_as_stream(
        self,
        view_xml: Incomplete | None = None,
        render_options: Incomplete | None = None,
        expand_groups: Incomplete | None = None,
    ): ...
    def reserve_list_item_id(self) -> ClientResult[int]: ...
    def get_related_fields(self): ...
    def get_special_folder_url(
        self, folder_type, force_create, existing_folder_guid
    ): ...
    def reset_doc_id(self): ...
    def set_exempt_from_block_download_of_non_viewable_files(self, value): ...
    @property
    def id(self) -> str | None: ...
    @property
    def additional_ux_properties(self) -> str | None: ...
    @property
    def author(self): ...
    @property
    def allow_content_types(self) -> bool | None: ...
    @property
    def allow_deletion(self) -> bool | None: ...
    @property
    def base_template(self) -> int | None: ...
    @property
    def base_type(self) -> int | None: ...
    @property
    def browser_file_handling(self) -> int | None: ...
    @property
    def created(self): ...
    @property
    def default_display_form_url(self) -> str | None: ...
    @property
    def default_view_path(self): ...
    @property
    def default_view_url(self) -> str | None: ...
    @property
    def crawl_non_default_views(self) -> bool | None: ...
    @property
    def creatables_info(self): ...
    @property
    def current_change_token(self): ...
    @property
    def data_source(self): ...
    @property
    def default_edit_form_url(self) -> str | None: ...
    @property
    def default_item_open_in_browser(self) -> bool | None: ...
    @property
    def default_item_open_use_list_setting(self) -> bool | None: ...
    @property
    def disable_commenting(self) -> bool | None: ...
    @property
    def disable_grid_editing(self) -> bool | None: ...
    @property
    def document_template_url(self) -> str | None: ...
    @property
    def effective_base_permissions(self): ...
    @property
    def effective_base_permissions_for_ui(self): ...
    @property
    def enable_assign_to_email(self) -> bool | None: ...
    @property
    def enable_attachments(self) -> bool | None: ...
    @property
    def enable_folder_creation(self) -> bool | None: ...
    @enable_folder_creation.setter
    def enable_folder_creation(self, value: bool) -> None: ...
    @property
    def enable_minor_versions(self) -> bool | None: ...
    @property
    def enable_moderation(self) -> bool | None: ...
    @property
    def enable_request_sign_off(self) -> bool | None: ...
    @property
    def enable_versioning(self) -> bool | None: ...
    @property
    def exclude_from_offline_client(self) -> bool | None: ...
    @property
    def exempt_from_block_download_of_non_viewable_files(self) -> bool | None: ...
    @property
    def file_save_post_processing_enabled(self) -> bool | None: ...
    @property
    def force_checkout(self) -> bool | None: ...
    @property
    def has_content_assembly_templates(self) -> bool | None: ...
    @property
    def has_external_data_source(self) -> bool | None: ...
    @property
    def has_folder_coloring_fields(self) -> bool | None: ...
    @property
    def irm_enabled(self) -> bool | None: ...
    @property
    def irm_expire(self) -> bool | None: ...
    @property
    def items(self) -> ListItemCollection: ...
    @property
    def root_folder(self) -> Folder: ...
    @property
    def fields(self) -> FieldCollection: ...
    @property
    def subscriptions(self): ...
    @property
    def views(self) -> ViewCollection: ...
    @property
    def default_view(self): ...
    @property
    def content_types(self): ...
    @property
    def content_types_enabled(self) -> bool | None: ...
    @property
    def is_private(self) -> bool | None: ...
    @property
    def is_site_assets_library(self) -> bool | None: ...
    @property
    def is_system_list(self) -> bool | None: ...
    @property
    def user_custom_actions(self): ...
    @property
    def version_policies(self): ...
    @property
    def custom_action_elements(self): ...
    @property
    def forms(self): ...
    @property
    def parent_web(self): ...
    @property
    def event_receivers(self): ...
    @property
    def item_count(self) -> int | None: ...
    @property
    def last_item_deleted_date(self): ...
    @property
    def last_item_modified_date(self): ...
    @property
    def last_item_user_modified_date(self): ...
    @property
    def list_experience_options(self) -> int | None: ...
    @property
    def list_form_customized(self) -> bool | None: ...
    @property
    def list_item_entity_type_full_name(self) -> str | None: ...
    @property
    def major_version_limit(self) -> int | None: ...
    @property
    def list_schema_version(self) -> str | None: ...
    @property
    def major_with_minor_versions_limit(self) -> int | None: ...
    @property
    def no_crawl(self) -> bool | None: ...
    @property
    def on_quick_launch(self) -> bool | None: ...
    @property
    def page_render_type(self) -> int | None: ...
    @property
    def parent_web_url(self) -> str | None: ...
    @property
    def parser_disabled(self) -> str | None: ...
    @property
    def read_security(self) -> int | None: ...
    @property
    def server_template_can_create_folders(self) -> bool | None: ...
    @property
    def show_hidden_fields_in_modern_form(self) -> bool | None: ...
    @property
    def title(self) -> str | None: ...
    @title.setter
    def title(self, val) -> None: ...
    @property
    def default_content_approval_workflow_id(self) -> str | None: ...
    @property
    def description(self) -> str | None: ...
    @description.setter
    def description(self, val: str) -> None: ...
    @property
    def description_resource(self): ...
    @property
    def parent_web_path(self): ...
    @property
    def schema_xml(self) -> str | None: ...
    @property
    def template_feature_id(self) -> str | None: ...
    @property
    def title_resource(self): ...
    @property
    def validation_formula(self) -> str | None: ...
    @property
    def parent_collection(self) -> ListCollection: ...
    def get_property(self, name, default_value: Incomplete | None = None): ...
    def set_property(self, name, value, persist_changes: bool = True): ...
