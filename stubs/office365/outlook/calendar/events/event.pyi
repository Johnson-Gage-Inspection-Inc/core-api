from _typeshed import Incomplete
from office365.directory.extensions.extended_property import MultiValueLegacyExtendedProperty as MultiValueLegacyExtendedProperty, SingleValueLegacyExtendedProperty as SingleValueLegacyExtendedProperty
from office365.directory.extensions.extension import Extension as Extension
from office365.entity_collection import EntityCollection as EntityCollection
from office365.outlook.calendar.attendees.attendee import Attendee as Attendee
from office365.outlook.calendar.dateTimeTimeZone import DateTimeTimeZone as DateTimeTimeZone
from office365.outlook.calendar.response_status import ResponseStatus as ResponseStatus
from office365.outlook.item import OutlookItem as OutlookItem
from office365.outlook.mail.attachments.collection import AttachmentCollection as AttachmentCollection
from office365.outlook.mail.item_body import ItemBody as ItemBody
from office365.outlook.mail.location import Location as Location
from office365.runtime.client_value_collection import ClientValueCollection as ClientValueCollection
from office365.runtime.paths.resource_path import ResourcePath as ResourcePath
from office365.runtime.queries.service_operation import ServiceOperationQuery as ServiceOperationQuery

class Event(OutlookItem):
    def accept(self, send_response, comment: Incomplete | None = None): ...
    def cancel(self, comment: Incomplete | None = None): ...
    def decline(self, proposed_new_time: Incomplete | None = None, send_response: bool = True, comment: Incomplete | None = None): ...
    def dismiss_reminder(self): ...
    def permanent_delete(self): ...
    @property
    def allow_new_time_proposals(self) -> bool | None: ...
    @property
    def has_attachments(self) -> bool | None: ...
    @property
    def hide_attendees(self) -> bool | None: ...
    @property
    def ical_uid(self) -> str | None: ...
    @property
    def importance(self) -> str | None: ...
    @property
    def is_all_day(self) -> bool | None: ...
    @property
    def is_cancelled(self) -> bool | None: ...
    @property
    def is_draft(self) -> bool | None: ...
    @property
    def is_online_meeting(self) -> bool | None: ...
    @property
    def is_organizer(self) -> bool | None: ...
    @property
    def is_reminder_on(self) -> bool | None: ...
    @property
    def start(self): ...
    @start.setter
    def start(self, value) -> None: ...
    @property
    def end(self): ...
    @end.setter
    def end(self, value) -> None: ...
    @property
    def single_value_extended_properties(self) -> EntityCollection[SingleValueLegacyExtendedProperty]: ...
    @property
    def multi_value_extended_properties(self) -> EntityCollection[MultiValueLegacyExtendedProperty]: ...
    @property
    def body(self): ...
    @body.setter
    def body(self, value) -> None: ...
    @property
    def body_preview(self) -> str | None: ...
    @property
    def reminder_minutes_before_start(self) -> int | None: ...
    @property
    def response_requested(self) -> bool | None: ...
    @property
    def response_status(self) -> str | None: ...
    @property
    def series_master_id(self) -> str | None: ...
    @property
    def subject(self) -> str | None: ...
    @subject.setter
    def subject(self, value: str) -> None: ...
    @property
    def location(self): ...
    @property
    def transaction_id(self) -> str | None: ...
    @property
    def type(self) -> str | None: ...
    @property
    def web_link(self) -> str | None: ...
    @property
    def calendar(self): ...
    @property
    def attendees(self): ...
    @property
    def attachments(self): ...
    @property
    def extensions(self) -> EntityCollection[Extension]: ...
    @property
    def instances(self): ...
    def get_property(self, name, default_value: Incomplete | None = None): ...
