from _typeshed import Incomplete
from office365.directory.extensions.extended_property import MultiValueLegacyExtendedProperty as MultiValueLegacyExtendedProperty, SingleValueLegacyExtendedProperty as SingleValueLegacyExtendedProperty
from office365.entity import Entity as Entity
from office365.entity_collection import EntityCollection as EntityCollection
from office365.outlook.mail.messages.collection import MessageCollection as MessageCollection
from office365.outlook.mail.messages.rules.collection import MessageRuleCollection as MessageRuleCollection
from office365.runtime.paths.resource_path import ResourcePath as ResourcePath
from office365.runtime.queries.service_operation import ServiceOperationQuery as ServiceOperationQuery

class MailFolder(Entity):
    def copy(self, destination_id): ...
    def empty(self, delete_sub_folders: bool = False): ...
    def mark_all_items_as_read(self): ...
    def mark_all_items_as_unread(self): ...
    @property
    def child_folder_count(self) -> int | None: ...
    @property
    def display_name(self) -> str | None: ...
    @property
    def is_hidden(self) -> bool | None: ...
    @property
    def parent_folder_id(self) -> str | None: ...
    @property
    def total_item_count(self) -> int | None: ...
    @property
    def unread_item_count(self) -> int | None: ...
    @property
    def child_folders(self) -> EntityCollection[MailFolder]: ...
    @property
    def message_rules(self) -> MessageRuleCollection: ...
    @property
    def messages(self) -> MessageCollection: ...
    @property
    def multi_value_extended_properties(self) -> EntityCollection[MultiValueLegacyExtendedProperty]: ...
    @property
    def single_value_extended_properties(self) -> EntityCollection[SingleValueLegacyExtendedProperty]: ...
    def get_property(self, name, default_value: Incomplete | None = None): ...
