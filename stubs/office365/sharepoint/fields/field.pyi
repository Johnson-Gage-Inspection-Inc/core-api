from _typeshed import Incomplete
from office365.runtime.client_result import ClientResult as ClientResult
from office365.runtime.paths.resource_path import ResourcePath as ResourcePath
from office365.runtime.queries.service_operation import ServiceOperationQuery as ServiceOperationQuery
from office365.sharepoint.entity import Entity as Entity
from office365.sharepoint.fields.type import FieldType as FieldType
from office365.sharepoint.translation.user_resource import UserResource as UserResource

class Field(Entity):
    def __init__(self, context, resource_path: Incomplete | None = None) -> None: ...
    @staticmethod
    def resolve_field_type(type_id_or_name): ...
    @staticmethod
    def create_field(context, field_parameters): ...
    def enable_index(self): ...
    def disable_index(self): ...
    def set_show_in_display_form(self, flag): ...
    def set_show_in_edit_form(self, flag) -> None: ...
    def set_show_in_new_form(self, flag): ...
    @property
    def id(self) -> str | None: ...
    @property
    def auto_indexed(self) -> bool | None: ...
    @property
    def default_formula(self) -> str | None: ...
    @property
    def description_resource(self): ...
    @property
    def schema_xml(self) -> str | None: ...
    @schema_xml.setter
    def schema_xml(self, val) -> None: ...
    @property
    def type_as_string(self) -> str | None: ...
    @property
    def title(self) -> str | None: ...
    @title.setter
    def title(self, val) -> None: ...
    @property
    def group(self) -> str | None: ...
    @group.setter
    def group(self, val) -> None: ...
    @property
    def internal_name(self) -> str | None: ...
    @property
    def can_be_deleted(self) -> bool | None: ...
    @property
    def client_side_component_id(self) -> str | None: ...
    @property
    def client_side_component_properties(self) -> str | None: ...
    @property
    def client_validation_formula(self) -> str | None: ...
    @property
    def enforce_unique_values(self) -> bool | None: ...
    @property
    def filterable(self) -> bool | None: ...
    @property
    def from_base_type(self) -> bool | None: ...
    @property
    def js_link(self) -> str | None: ...
    @property
    def hidden(self) -> bool | None: ...
    @hidden.setter
    def hidden(self, val) -> None: ...
    @property
    def no_crawl(self) -> bool | None: ...
    @property
    def read_only_field(self) -> bool | None: ...
    @property
    def default_value(self) -> str | None: ...
    @default_value.setter
    def default_value(self, val) -> None: ...
    @property
    def indexed(self): ...
    @property
    def type_display_name(self) -> str | None: ...
    @property
    def title_resource(self): ...
    @property
    def type_short_description(self) -> str | None: ...
    def get_property(self, name, default_value: Incomplete | None = None): ...
    __class__: Incomplete
    def set_property(self, name, value, persist_changes: bool = True): ...
