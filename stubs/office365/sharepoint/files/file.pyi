import datetime
from _typeshed import Incomplete
from office365.runtime.client_result import ClientResult as ClientResult
from office365.runtime.http.http_method import HttpMethod as HttpMethod
from office365.runtime.http.request_options import RequestOptions as RequestOptions
from office365.runtime.paths.resource_path import ResourcePath as ResourcePath
from office365.runtime.paths.service_operation import ServiceOperationPath as ServiceOperationPath
from office365.runtime.queries.function import FunctionQuery as FunctionQuery
from office365.runtime.queries.service_operation import ServiceOperationQuery as ServiceOperationQuery
from office365.runtime.queries.update_entity import UpdateEntityQuery as UpdateEntityQuery
from office365.sharepoint.activities.capabilities import ActivityCapabilities as ActivityCapabilities
from office365.sharepoint.entity import Entity as Entity
from office365.sharepoint.entity_collection import EntityCollection as EntityCollection
from office365.sharepoint.files.versions.collection import FileVersionCollection as FileVersionCollection
from office365.sharepoint.files.versions.event import FileVersionEvent as FileVersionEvent
from office365.sharepoint.folders.folder import Folder as Folder
from office365.sharepoint.listitems.listitem import ListItem as ListItem
from office365.sharepoint.permissions.irm.effective_settings import EffectiveInformationRightsManagementSettings as EffectiveInformationRightsManagementSettings
from office365.sharepoint.permissions.irm.file_settings import InformationRightsManagementFileSettings as InformationRightsManagementFileSettings
from office365.sharepoint.principal.users.user import User as User
from office365.sharepoint.sharing.links.share_response import ShareLinkResponse as ShareLinkResponse
from office365.sharepoint.utilities.upload_status import UploadStatus as UploadStatus
from office365.sharepoint.utilities.wopi_frame_action import SPWOPIFrameAction as SPWOPIFrameAction
from office365.sharepoint.webparts.limited_manager import LimitedWebPartManager as LimitedWebPartManager
from office365.sharepoint.webparts.personalization_scope import PersonalizationScope as PersonalizationScope
from typing import AnyStr

class AbstractFile(Entity):
    def read(self): ...
    def write(self, content): ...

class File(AbstractFile):
    @staticmethod
    def from_url(abs_url): ...
    def create_anonymous_link(self, is_edit_link: bool = False): ...
    def create_anonymous_link_with_expiration(self, expiration: datetime.datetime, is_edit_link: bool = False) -> ClientResult[str]: ...
    def get_content(self) -> ClientResult[AnyStr]: ...
    def get_pre_authorized_access_url(self, expiration_hours: int) -> ClientResult[str]: ...
    def get_absolute_url(self) -> ClientResult[str]: ...
    def get_sharing_information(self): ...
    def get_wopi_frame_url(self, action=...): ...
    def share_link(self, link_kind: int, expiration: datetime.datetime | None = None, role: int | None = None, password: str | None = None) -> ClientResult[ShareLinkResponse]: ...
    def unshare_link(self, link_kind, share_id: Incomplete | None = None): ...
    def get_image_preview_uri(self, width, height, client_type: Incomplete | None = None): ...
    def get_image_preview_url(self, width, height, client_type: Incomplete | None = None): ...
    def recycle(self): ...
    def approve(self, comment): ...
    def deny(self, comment): ...
    def copyto(self, destination: Folder | str, overwrite: bool = False, file_name: str = None) -> File: ...
    def copyto_using_path(self, destination, overwrite: bool = False, file_name: Incomplete | None = None): ...
    def moveto(self, destination, flag): ...
    def move_to_using_path(self, destination, flag): ...
    def publish(self, comment): ...
    def unpublish(self, comment): ...
    def check_access_and_post_view_audit_event(self): ...
    def checkout(self): ...
    def checkin(self, comment, checkin_type): ...
    def undocheckout(self): ...
    def get_limited_webpart_manager(self, scope=...): ...
    def open_binary_stream(self): ...
    def save_binary_stream(self, stream): ...
    def get_upload_status(self, upload_id): ...
    def upload_with_checksum(self, upload_id: str, checksum: str, stream: bytes) -> File: ...
    def cancel_upload(self, upload_id): ...
    def start_upload(self, upload_id, content): ...
    def continue_upload(self, upload_id, file_offset, content): ...
    def finish_upload(self, upload_id, file_offset, content): ...
    def finish_upload_with_checksum(self, upload_id, file_offset, checksum, stream): ...
    @staticmethod
    def save_binary(context, server_relative_url, content): ...
    @staticmethod
    def open_binary(context, server_relative_url): ...
    def download(self, file_object, after_downloaded: Incomplete | None = None): ...
    def download_session(self, file_object, chunk_downloaded: Incomplete | None = None, chunk_size=..., use_path: bool = True): ...
    def rename(self, new_file_name): ...
    @property
    def activity_capabilities(self): ...
    @property
    def checkin_comment(self) -> str | None: ...
    @property
    def content_tag(self) -> str | None: ...
    @property
    def author(self): ...
    @property
    def checked_out_by_user(self): ...
    @property
    def check_out_type(self) -> int | None: ...
    @property
    def expiration_date(self) -> datetime.datetime | None: ...
    @property
    def version_events(self) -> EntityCollection[FileVersionEvent]: ...
    @property
    def effective_information_rights_management_settings(self): ...
    @property
    def information_rights_management_settings(self): ...
    @property
    def listItemAllFields(self) -> ListItem: ...
    @property
    def version_expiration_report(self): ...
    @property
    def versions(self) -> FileVersionCollection: ...
    @property
    def modified_by(self): ...
    @property
    def locked_by_user(self): ...
    @property
    def serverRelativeUrl(self) -> str | None: ...
    @property
    def server_relative_path(self): ...
    @property
    def length(self) -> int | None: ...
    @property
    def exists(self) -> bool | None: ...
    @property
    def irm_enabled(self) -> bool | None: ...
    @property
    def level(self) -> str | None: ...
    @property
    def linking_uri(self) -> str | None: ...
    @property
    def name(self) -> str | None: ...
    @property
    def list_id(self) -> str | None: ...
    @property
    def site_id(self) -> str | None: ...
    @property
    def web_id(self) -> str | None: ...
    @property
    def time_created(self) -> datetime.datetime | None: ...
    @property
    def time_last_modified(self) -> datetime.datetime | None: ...
    @property
    def minor_version(self) -> int | None: ...
    @property
    def major_version(self) -> int | None: ...
    @property
    def unique_id(self) -> str | None: ...
    @property
    def customized_page_status(self) -> int | None: ...
    @property
    def parent_folder(self) -> Folder | None: ...
    def get_property(self, name, default_value: Incomplete | None = None): ...
    def set_property(self, name, value, persist_changes: bool = True): ...
